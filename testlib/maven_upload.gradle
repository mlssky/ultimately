apply plugin: 'com.android.library'
apply plugin: 'maven'
//apply plugin: 'signing'

android {
    compileSdkVersion 27
}
def maven_url1 = "file://$rootDir/mavenLocalDir"
def userName1 = 'admin'
def password1 = 'admin123'

def version1 = "1.0.6"
def artifactId1 = "voinstall"
def artifactFile1 = "./../kgrepo/voinstall.aar"
def groupId1 = "tv.yixia.base.push"
def description1 = "fast install lib for bb"
def packaging1 = "aar"

//生产java 文档
task javadoc(type: Javadoc) {
    title = 'bbdoc'
    description = 'java doc'
    source = android.sourceSets.main.java.srcDirs

//    classpath += project.files(configurations.provided.files, configurations.compile.files, android.getBootClasspath().join(File.pathSeparator))
    classpath += project.files(configurations.compile.files, android.getBootClasspath().join(File.pathSeparator))

    options {
        encoding 'utf-8'
        charSet 'utf-8'
        links 'http://docs.oracle.com/javase/7/docs/api/'
        linksOffline "https://developer.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    options.encoding = 'utf-8'
    failOnError false
    destinationDir new File("${buildDir}/../docs")
}

// 进行数字签名
// signing {
// 当 发布版本 & 存在"uploadArchives"任务时，才执行
//    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
//    required { gradle.taskGraph.hasTask("uploadArchives") }
//    sign configurations.archives
//}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from "${buildDir}/../docs"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {

            configurations.archives

            snapshotRepository(url: maven_url1) {
                authentication(userName: userName1, password: password1)
            }

            repository(url: maven_url1) {
                authentication(userName: userName1, password: password1)
            }

//            beforeDeployment {
//                MavenDeployment deployment -> signing.signPom(deployment)
//            }

            pom.project {
                version version1
                artifactId artifactId1
                groupId groupId1
                packaging packaging1
                description description1
            }

        }
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


//mvn deploy:deploy-file -e -Dfile=你要部署的文件 -DgroupId=#groupId# -DartifactId=#artifactId# -Dversion=版本设置-SNAPSHOT -Durl==上传服务器地址 -Dpackaging=aar